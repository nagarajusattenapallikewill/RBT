/**
 * This is generated code and SHOULD NOT BE MODIFIED BY HAND. To change the transactions or the fields below, please regenerate.
 * If you have any questions, contact the Morpheus team.
 */
package com.onmobile.apps.ringbacktones.eventlogging;

import com.onmobile.reporting.framework.capture.api.Configuration;
import com.onmobile.reporting.framework.capture.api.ReportingException;

/**Every content browsed,downloaded and dedicated by the end user through voice application will be logged in through this API. 
 */
public class UGCEventLogger extends com.onmobile.reporting.framework.capture.api.TransactionBase {

	/**
	 * @param config Configuration of this logging system. Most important configuration item is the filepath to which logging should be done.
	 * @throws IOException if the initial log file cannot be created
	 */
	public UGCEventLogger(Configuration config) throws java.io.IOException {
		super();
		initialize(config);
	}

	/* (non-Javadoc)
	 * @see com.onmobile.reporting.framework.capture.api.TransactionBase#getProduct()
	 */
	public String getProduct() {
		return "ugccontent";
	}
	
	/* (non-Javadoc)
	 * @see com.onmobile.reporting.framework.capture.api.TransactionBase#getVersion()
	 */
	public String getVersion() {
		return "1.0.0";
	}

	/* (non-Javadoc)
	 * @see com.onmobile.reporting.framework.capture.api.TransactionBase#getFieldHeadings()
	 */
	protected String getFieldHeadings() {
		return "TIMESTAMP,TRANSTYPE,CLIP_ID,CLIP_NAME,WAVE_FILE_NAME,PROMO_ID,CLIP_START_TIME,CLIP_END_TIME,ALBUM,LANGUAGE,ARTIST";
	}

	/* (non-Javadoc)
	 * @see com.onmobile.reporting.framework.capture.api.TransactionBase#isAutoGeneratedTimestamp()
	 */
	protected boolean isAutoGeneratedTimestamp() {
		return false;
	}

	/**
	 * Transanction to indicate that a new song is created in the CMS. 
	 *
	 * @param clipId ID of content clip ID in CMS 
	 * @param clipName Name of the song 
	 * @param waveFileName File name of the clip in CMS 
	 * @param promoId Promo ID of song, caller should guarantee that no commas, carriage-returns or line-feeds are passed in 
	 * @param clipStartTime Clip creation time 
	 * @param clipEndTime Clip expiry time 
	 * @param timestamp Time when the log is being written 
	 * @param album Album meta data of the clip 
	 * @param language Language meta data of the clip, caller should guarantee that no commas, carriage-returns or line-feeds are passed in 
	 * @param artist Artist meta data of the clip, caller should guarantee that no commas, carriage-returns or line-feeds are passed in 
	*/
	public void songCreation(
		 long clipId
		,String clipName
		,String waveFileName
		,String promoId
		,java.util.Date clipStartTime
		,java.util.Date clipEndTime
		,java.util.Date timestamp
		,String album
		,String language
		,String artist
	) throws ReportingException {
		StringBuffer buff = new StringBuffer();
		append(buff, timestamp);
		nextField(buff);// write field separator
		append(buff, "songCreation", false); // transType
		nextField(buff);// write field separator
		append(buff, clipId, 9223372036854775807L);
		nextField(buff);// write field separator
		append(buff, clipName, true);
		nextField(buff);// write field separator
		append(buff, waveFileName, true);
		nextField(buff);// write field separator
		append(buff, promoId, false);
		nextField(buff);// write field separator
		append(buff, clipStartTime);
		nextField(buff);// write field separator
		append(buff, clipEndTime);
		nextField(buff);// write field separator
		append(buff, album, true);
		nextField(buff);// write field separator
		append(buff, language, false);
		nextField(buff);// write field separator
		append(buff, artist, false);
		write(buff); // write record to file
	} // end of transaction function

}
